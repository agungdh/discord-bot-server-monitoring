name: Build Jar (Maven) & Upload (Actions + Release)

on:
  push:
    branches: [ master ]
  release:
    types: [published]        # hanya saat release dipublish (bukan draft)
  workflow_dispatch:

permissions:
  contents: write             # perlu untuk upload ke Releases

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout ke tag release kalau event release published
      - name: Checkout (release tag)
        if: github.event_name == 'release'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      # Checkout default untuk push ke master / manual
      - name: Checkout (branch)
        if: github.event_name != 'release'
        uses: actions/checkout@v4

      - name: Set up Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Build JAR (skip tests)
        run: |
          chmod +x mvnw
          ./mvnw -B -DskipTests package

      - name: Package artifact (zip)
        id: pack
        shell: bash
        run: |
          set -euo pipefail

          # Ambil JAR runnable terbaru (bukan sources/javadoc/original)
          JARPATH=$(find target -maxdepth 1 -type f -name "*.jar" \
            ! -name "*-sources.jar" ! -name "*-javadoc.jar" ! -name "original-*.jar" \
            -printf "%T@ %p\n" | sort -nr | head -n1 | awk '{print $2}')

          if [ -z "${JARPATH:-}" ] || [ ! -f "$JARPATH" ]; then
            echo "JAR runnable tidak ditemukan di target/." >&2
            ls -lah target || true
            exit 1
          fi

          APPJAR="$(basename "$JARPATH")"
          APPBASE="${APPJAR%.jar}"

          # Suffix: tag untuk release published, run_id untuk push master
          if [[ "${GITHUB_EVENT_NAME}" == "release" ]]; then
            SUFFIX="${{ github.event.release.tag_name }}"
          else
            SUFFIX="${GITHUB_RUN_ID}"
          fi

          ZIPNAME="${APPBASE}-${SUFFIX}.zip"

          echo "Jalankan: java -jar ${APPJAR}" > target/HOW_TO_RUN.txt
          (cd target && zip -r "../${ZIPNAME}" "${APPJAR}" HOW_TO_RUN.txt >/dev/null)

          sha256sum "${ZIPNAME}" | tee "${ZIPNAME}.sha256"

          echo "zip=${ZIPNAME}" >> "$GITHUB_OUTPUT"
          echo "checksum=${ZIPNAME}.sha256" >> "$GITHUB_OUTPUT"

      - name: Upload artifact (Actions tab)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.pack.outputs.zip }}
          path: |
            ${{ steps.pack.outputs.zip }}
            ${{ steps.pack.outputs.checksum }}
          if-no-files-found: error
          retention-days: 14

      - name: Upload assets to Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.release.tag_name }}
          files: |
            ${{ steps.pack.outputs.zip }}
            ${{ steps.pack.outputs.checksum }}
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
